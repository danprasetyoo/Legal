services:
  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
    ports:
      - "${WEB_PORT}"
    environment:
      DATABASE_URL: "${DATABASE_URL}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network
    volumes:
      - ../backend:/app
      - /app/node_modules
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "${FRONTEND_PORT}"
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    restart: always

  admin:
    build:
      context: ..
      dockerfile: docker/admin.Dockerfile
    ports:
      - "${ADMIN_PORT}"
    networks:
      - admin-network
      - backend-network
    depends_on:
      - backend
    volumes:
      - ../admin:/app
      - /app/node_modules
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}"
    volumes:
      - ../nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
      - admin
    networks:
      - backend-network
      - frontend-network
      - admin-network
    restart: always

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: delegal
    ports:
      - "${DB_PORT}"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "${JENKINS_PORT}"
      - "${JENKINS_AGENT_PORT}"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-network
    restart: always

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT}"
    volumes:
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - jenkins-network
      - backend-network
      - frontend-network
    restart: always

volumes:
  db-data:
  jenkins-data:


networks:
  backend-network:
  frontend-network:
  jenkins-network:
  admin-network:
